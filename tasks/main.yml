---
# tasks file for mapr_post_install_test
    - name: clean up the teragen
      run_once: yes
      command: hadoop fs -rm -f -r /user/teragen
      when: classic_enabled

    - name: try to submit a small job (teragen - MRv1)
      run_once: yes
      environment:
        MAPR_MAPREDUCE_MODE: classic
      command: hadoop jar /opt/mapr/hadoop/hadoop-0.20.2/hadoop-0.20.2-dev-examples.jar teragen 100 /user/teragen
      register: teragen
      when: classic_enabled

    - name: clean up the teragen
      run_once: yes
      command: hadoop fs -rm -f -r /user/teragen
      when: classic_enabled

    - name: check whether /benchmarks is a volume
      sudo_user: mapr
      run_once: yes
      shell: hadoop mfs -lsd /benchmarks | egrep /benchmarks | egrep "^v"
      register: benchmarks_dir
      changed_when: false
      failed_when: benchmarks_dir.rc not in (0,1)

    - name: delete benchmarks directory
      run_once: yes
      sudo_user: mapr
      command: hadoop fs -rm -f -r /benchmarks
      when: benchmarks_dir.stdout|length == 0

    - name: create benchmarks volume
      run_once: yes
      mapr_volume: name=benchmarks path=/benchmarks replication=1 minreplication=1 state=present username={{mapr_admin_username}} password={{mapr_password_clear|default("mapr")}} mapr_webserver={{mapr_webserver}}

    - name: run RWSpeedTest, 5GB data per node
      sudo_user: mapr
      shell: hadoop jar /opt/mapr/lib/maprfs-diagnostic-tools-*.jar com.mapr.fs.RWSpeedTest /benchmarks/{{ansible_fqdn}}/rwspeedtest {{item}} maprfs:/// > /tmp/rwspeedtest-output
      with_items:
        - 5120
        - -5120

    - name: check that resourcemanager role exists
      run_once: yes
      stat: path=/opt/mapr/roles/resourcemanager
      register: resourcemanager
      when: yarn_enabled

    - name: clean up the teragen
      run_once: yes
      sudo_user: mapr
      command: hadoop fs -rm -f -r /user/teragen
      when: yarn_enabled

    - name: try to submit a small job (teragen - MRv2)
      run_once: yes
      sudo_user: mapr
      environment:
        MAPR_MAPREDUCE_MODE: yarn
      command: hadoop jar /opt/mapr/hadoop/hadoop-0.20.2/hadoop-0.20.2-dev-examples.jar teragen 100 /user/teragen
      register: teragen
      when: yarn_enabled
 
    - name: clean up the teragen
      run_once: yes
      sudo_user: mapr
      command: hadoop fs -rm -f -r /user/teragen
      when: yarn_enabled

    - name: get ec2 facts
      ec2_facts:
      register: ec2_facts
      when: ansible_distribution in ('Amazon')

    - name: verify the impalaserver role is present
      stat: path=/opt/mapr/roles/impalaserver
      register: impalaserver_role
      when: impala_enabled is defined and inventory_hostname in groups["impalaserver"]

    - name: run a minimal impala query on all impalad nodes (will connect locally)
      command: impala-shell --query='show tables'
      register: impala_show_tables
      changed_when: False
      failed_when: impala_show_tables.rc != 0
      when: impala_enabled is defined and inventory_hostname in groups["impalaserver"] and impalaserver_role.stat.exists

    - name: try to submit a small job (default MR framework)
      run_once: yes
      sudo_user: mapr
      command: hadoop jar /opt/mapr/hadoop/hadoop-0.20.2/hadoop-0.20.2-dev-examples.jar teragen 100 /user/teragen
      register: teragen
      when: (classic_enabled or yarn_enabled) and inventory_hostname in groups["edge"]

    - name: clean up the teragen
      run_once: yes
      sudo_user: mapr
      command: hadoop fs -rm -f -r /user/teragen
      when: teragen.rc == 0
      when: classic_enabled or yarn_enabled and inventory_hostname in groups["edge"]
