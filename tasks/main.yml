---
# tasks file for mapr_post_install_test

    - name: clean up the teragen
      run_once: yes
      command: hadoop fs -rm -f -r /user/teragen
      when: classic_enabled

    - name: try to submit a small job (teragen - MRv1)
      run_once: yes
      environment:
        MAPR_MAPREDUCE_MODE: classic
      command: hadoop jar /opt/mapr/hadoop/hadoop-0.20.2/hadoop-0.20.2-dev-examples.jar teragen 100 /user/teragen
      register: teragen
      when: classic_enabled

    - name: clean up the teragen
      run_once: yes
      command: hadoop fs -rm -f -r /user/teragen
      when: classic_enabled

    - name: run TestDFSIO to write,read 15GB of data per node (MRv1)
      run_once: yes
      environment:
        MAPR_MAPREDUCE_MODE: classic
      command: hadoop jar /opt/mapr/hadoop/hadoop-0.20.2/hadoop-0.20.2-dev-test.jar TestDFSIO -{{item}} -fileSize 1024 -nrFiles {{groups['cluster']|length * 15}} -resFile /tmp/mrv1-result-{{item}}
      with_items:
        - write
        - read
      when: classic_enabled

    - name: get the results files
      run_once: yes
      fetch: src=/tmp/mrv1-result-{{item}} dest=test_results fail_on_missing=true
      with_items:
        - read
        - write
      when: classic_enabled

    - name: clean up TestDFSIO data
      run_once: yes
      environment:
        MAPR_MAPREDUCE_MODE: classic
      command: hadoop jar /opt/mapr/hadoop/hadoop-0.20.2/hadoop-0.20.2-dev-test.jar TestDFSIO -clean
      when: classic_enabled

    - name: check that jobtracker role exists
      run_once: yes
      stat: path=/opt/mapr/roles/resourcemanager
      register: resourcemanager
      when: yarn_enabled

    - name: clean up the teragen
      run_once: yes
      command: hadoop fs -rm -f -r /user/teragen
      when: yarn_enabled

    - name: try to submit a small job (teragen - MRv2)
      run_once: yes
      environment:
        MAPR_MAPREDUCE_MODE: yarn
      command: hadoop jar /opt/mapr/hadoop/hadoop-0.20.2/hadoop-0.20.2-dev-examples.jar teragen 100 /user/teragen
      register: teragen
      when: yarn_enabled
 
    - name: clean up the teragen
      run_once: yes
      command: hadoop fs -rm -f -r /user/teragen
      when: yarn_enabled

    - name: run TestDFSIO to write,read 15GB of data per node (MRv2)
      run_once: yes
      environment:
        MAPR_MAPREDUCE_MODE: yarn
      command: hadoop jar /opt/mapr/hadoop/hadoop-0.20.2/hadoop-0.20.2-dev-test.jar TestDFSIO -{{item}} -fileSize 1024 -nrFiles {{groups['cluster']|length * 15}} -resFile /tmp/mrv2-result-{{item}}
      with_items:
        - write
        - read
      when: yarn_enabled

    - name: get the results files
      run_once: yes
      fetch: src=/tmp/mrv2-result-{{item}} dest=test_results fail_on_missing=true
      with_items:
        - read
        - write
      when: yarn_enabled is defined and yarn_enabled

    - name: clean up TestDFSIO data
      run_once: yes
      environment:
        MAPR_MAPREDUCE_MODE: yarn
      command: hadoop jar /opt/mapr/hadoop/hadoop-0.20.2/hadoop-0.20.2-dev-test.jar TestDFSIO -clean
      when: yarn_enabled

    - name: verify the impalaserver role is present
      stat: path=/opt/mapr/roles/impalaserver
      register: impalaserver_role
      when: impala_enabled is defined and inventory_hostname in groups["impalaserver"]

    - name: run a minimal impala query on all impalad nodes (will connect locally)
      command: impala-shell --query='show tables'
      register: impala_show_tables
      changed_when: False
      failed_when: impala_show_tables.rc != 0
      when: impala_enabled is defined and inventory_hostname in groups["impalaserver"] and impalaserver_role.stat.exists

    - name: try to submit a small job (default MR framework)
      run_once: yes
      command: hadoop jar /opt/mapr/hadoop/hadoop-0.20.2/hadoop-0.20.2-dev-examples.jar teragen 100 /user/teragen
      register: teragen
      when: classic_enabled is defined or yarn_enabled is defined and inventory_hostname in groups["edge"]

    - name: clean up the teragen
      run_once: yes
      command: hadoop fs -rm -f -r /user/teragen
      when: teragen.rc == 0
      when: classic_enabled or yarn_enabled and inventory_hostname in groups["edge"]

    - name: run a minimal hive command
      run_once: yes
      command: hive -e 'show tables'
      changed_when: False
      when: inventory_hostname in groups["edge"] or inventory_hostname in groups["hiveserver"]

    - name: load some data into hive and select
      run_once: yes
      command: hive -e "CREATE TABLE IF NOT EXISTS pokes (foo INT, bar STRING); LOAD DATA LOCAL INPATH '/opt/mapr/hive/hive-0.13/examples/files/kv1.txt' OVERWRITE INTO TABLE pokes; SELECT * FROM pokes;"
      changed_when: False
      when: inventory_hostname in groups["edge"] or inventory_hostname in groups["hiveserver"]

    - name: drop pokes table
      run_once: yes
      command: hive -e 'DROP TABLE pokes;'
      when: inventory_hostname in groups["edge"] or inventory_hostname in groups["hiveserver"]
